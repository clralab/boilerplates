esphome:
  name: name
  friendly_name: friendly name

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Declare the fonts
font:
  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: roboto
    size: 12

# Enable Home Assistant API
api:
  encryption:
    key: "encryption"

ota:
  password: "password"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 10.0.5.50
    gateway: 10.0.5.1
    subnet: 255.255.255.0

  use_address: 10.0.5.50

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ssid"
    password: "password"

captive_portal:

# Set the I2C pins
i2c:
  sda: 2
  scl: 0
  scan: true
  frequency: 800kHz

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "ESP IP Address"
      id: id_ip

sensor:
  - platform: wifi_signal
    name: "WiFi Signal Strength"
    update_interval: 60s

  - platform: adc
    pin: VCC
    name: "Vcc"
    id: id_vcc

  - platform: htu21d
    temperature:
      name: "Temperature"
      id: id_temperature
    humidity:
      name: "Relative Humidity"
      id: id_humidity
    update_interval: 60s

# Enable the display
display:
  - platform: ssd1306_i2c
    model: "SSD1306_128X32"
    address: 0x3C
    reset_pin: 4
    lambda: |-
      // Lambda to update the OLED display to say connecting to Wi-Fi
      it.printf(0, 0, id(roboto), "T: %.1f°C - RH: %.1f%%", id(id_temperature).state, id(id_humidity).state);
      it.printf(0, 18, id(roboto), "V: %.2f - IP: %s", id(id_vcc).state, id(id_ip).state.c_str());
